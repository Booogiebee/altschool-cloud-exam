---

- hosts: all
  become: yes
  become_user: root
  vars_files:
    - vars/main.yml

  tasks:
    - name: Install Prerequisitees
      apt: name={{ item }} state=latest force_apt_get=yes update_cache=yes
      loop: ['aptitude']

    - name: Install LAMP Packages
      apt: name={{ item }} state=latest force_apt_get=yes update_cache=yes
      loop: ['apache2', 'php', 'php-mysql', 'mysql-server', 'libapache2-mod-php', git, zip, unzip, curl, 'python3-pymysql', 'libmysqlclient-dev']
     
    - name: Start MySQL
      service:
        name=mysql
        state=started
        enabled=yes

     - name: install composer
        shell: cat /tmp/installer | php -- --install-dir=/usr/local/bin
        args:
          creates: /usr/local/bin/composer

     - name: Download php-composer
        get_url:
          url: https://getcomposer.org/installer
          dest: /tmp/installer


    - name: rename composer.phar to composer
       shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
       args:
         creates: /usr/local/bin/composer

    - name: make composer executable
        file: 
          path: /usr/local/bin/composer
          mode: a+x
          state: file
     
    - name: clone laravel repo code from github
        git: >
          repo=https://github.com/f1amy/laravel-realworld-example-app
          dest=/opt/{{ vhost_name }}
          force=yes
          accept_hostkey=yes

    - name: copy lavarel project
      shell: sudo mv /opt/{{ vhost_name }} /var/www/html/

    - name: Change permission
      shell: sudo chgrp -R www-data /var/www/html/{{ vhost_name }}/

    - name: Change permission
      shell: sudo chmod -R 775 /var/www/html/{{ vhost_name }}/storage
    
    - name: install laravel dependencies
      composer:
          command: update
          working_dir: /var/www/html/{{ vhost_name }}
      become: yes

      - name: Setup Apache vhost
        template:
          src: "files/apache.conf.j2"
          dest: "/etc/apache2/sites-available/{{ http_conf }}"
        notify: Reload Apache

      - name: Enable Apache Site
        shell: /usr/sbin/a2ensite {{ http-conf }}
        notify: Reload Apache

      - name: Disable Apache default site
        shell: /usr/sbin/a2dissite 000-default.conf
        when: disable_default
        notify: Reload Apache

       - name: Update a2ensite
        command: a2ensite {{ vhost_name }}

      - name: Enable the Apache rewrite module
        command:  a2enmod rewrite
   
        notify:
        - restart apache2

     handlers:
      - name: Reload Apache
        service: 
          name=apache2
          state=reloaded

      - name:  Reload Apache
         service: 
           name=apache2
           state=restarted 

      - name: Set the root "mysql_password"
        mysql_user:
          name: root
          password: "{{ "mysql_root_password" }}"
          login_unix_socket: /var/run/mysqld/mysqld.sock

       - name: Remove all the MYSQL Database
         mysqldb:
           name: test
           state: absent
           login_user: root
           login_password: "{{ "mysql_root_password" }}"


        - name: Create database user 
           community.mysql.mysql_user:
             name: boluwatife
             password: {{ "mysql_root_password" }}
             priv: '*.*:ALL'
             state: present

        - name: copy env file
            copy:
            src: /var/www/{{ vhost_name }}/.env.example
                remote_src: yes
                dest: /var/www/myapp/.env
                owner: "{{ ansible_effective_user_id }}"
                group: "{{ ansible_effective_group_id }}"
                mode: '0644'
           become: yes

        - name: Migrating DB
           shell: chdir={{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}
             {{ php_path }} artisan migrate --force
           register: migrate_result
           changed_when: "migrate_result.stdout != 'Nothing to migrate.'"


        - name: setup laravel
            shell: 
                cd /var/www/{{ vhost_name }}
                php artisan key:generate
            become: yes

        

      - name: Create PHP info file
        copy:
          src: files/info.php.j2
          dest: /var/www/{{ http_host }}/info.php
          owner: "{{ "app_user" }}
          mode: 0644
      
       